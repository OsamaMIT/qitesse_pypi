name: Upload Python Package

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  wheels-linux:
    name: Linux wheels (manylinux2014, cp38–cp312)
    runs-on: ubuntu-22.04
    container: quay.io/pypa/manylinux2014_x86_64
    steps:
      - uses: actions/checkout@v4

      # Install Rust inside the container
      - name: Install Rust
        run: |
          curl -sSf https://sh.rustup.rs | sh -s -- -y
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      # Build wheels using the Pythons provided by manylinux
      - name: Build wheels (cp38–cp312)
        run: |
          set -e
          for PY in cp38-cp38 cp39-cp39 cp310-cp310 cp311-cp311 cp312-cp312; do
            /opt/python/$PY/bin/python -m pip install -U pip maturin
            /opt/python/$PY/bin/maturin build --release --manylinux 2014 \
              --interpreter /opt/python/$PY/bin/python
          done

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-linux
          path: target/wheels/*.whl

  wheels-nonlinux:
    name: macOS & Windows wheels (py3.8–3.12)
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-13, macos-14]
        py: ["3.8","3.9","3.10","3.11","3.12"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}
      - uses: dtolnay/rust-toolchain@stable
      - run: python -m pip install -U pip maturin
      - name: Build wheel
        run: maturin build --release --interpreter python
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-py${{ matrix.py }}
          path: target/wheels/*.whl

  sdist:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: python -m pip install -U pip maturin
      - run: maturin sdist
      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  publish:
    needs: [wheels-linux, wheels-nonlinux, sdist]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist-all
      - run: mkdir -p dist find dist-all -name "*.whl" -o -name "*.tar.gz" -exec cp {} dist/ \;
      - run: python -m pip install -U twine
      - name: Upload to PyPI (API token)
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload --skip-existing dist/*
