name: Upload Python Package

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macos-13, macos-14, windows-latest]

    steps:
      - uses: dtolnay/rust-toolchain@stable

      # Build wheels. On Linux, this runs in manylinux2014 automatically.
      - name: Build wheels with maturin
        uses: PyO3/maturin-action@v1
        with:
          manylinux: "2014"   # ensures manylinux_2_17 compliance on Linux
          command: build
          args: >
            --release
            -i python3.8 -i python3.9 -i python3.10 -i python3.11 -i python3.12

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: target/wheels/*.whl

  sdist:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - run: python -m pip install -U maturin
      - run: maturin sdist
      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          # maturin sometimes places the sdist under target/wheels/
          path: |
            dist/*.tar.gz
            target/wheels/*.tar.gz

  publish:
    needs: [wheels, sdist]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist-all
      - run: |
          mkdir -p dist
          find dist-all -name "*.whl" -o -name "*.tar.gz" -exec cp {} dist/ \;
      - run: python -m pip install -U twine
      - name: Upload to PyPI (API token)
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload --skip-existing dist/*
